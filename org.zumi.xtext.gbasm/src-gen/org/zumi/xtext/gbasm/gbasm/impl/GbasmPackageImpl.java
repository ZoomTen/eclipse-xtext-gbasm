/**
 * generated by Xtext 2.26.0
 */
package org.zumi.xtext.gbasm.gbasm.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.zumi.xtext.gbasm.gbasm.AndCp;
import org.zumi.xtext.gbasm.gbasm.Asm;
import org.zumi.xtext.gbasm.gbasm.BankReference;
import org.zumi.xtext.gbasm.gbasm.CallOrJump;
import org.zumi.xtext.gbasm.gbasm.GbasmFactory;
import org.zumi.xtext.gbasm.gbasm.GbasmPackage;
import org.zumi.xtext.gbasm.gbasm.Instruction;
import org.zumi.xtext.gbasm.gbasm.LabelOrConstant;
import org.zumi.xtext.gbasm.gbasm.LabelReference;
import org.zumi.xtext.gbasm.gbasm.Ld;
import org.zumi.xtext.gbasm.gbasm.LocalLabel;
import org.zumi.xtext.gbasm.gbasm.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GbasmPackageImpl extends EPackageImpl implements GbasmPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass asmEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelOrConstantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass localLabelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass instructionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ldEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass labelReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bankReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass andCpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass callOrJumpEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.zumi.xtext.gbasm.gbasm.GbasmPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private GbasmPackageImpl()
  {
    super(eNS_URI, GbasmFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link GbasmPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static GbasmPackage init()
  {
    if (isInited) return (GbasmPackage)EPackage.Registry.INSTANCE.getEPackage(GbasmPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredGbasmPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    GbasmPackageImpl theGbasmPackage = registeredGbasmPackage instanceof GbasmPackageImpl ? (GbasmPackageImpl)registeredGbasmPackage : new GbasmPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theGbasmPackage.createPackageContents();

    // Initialize created meta-data
    theGbasmPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theGbasmPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(GbasmPackage.eNS_URI, theGbasmPackage);
    return theGbasmPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAsm()
  {
    return asmEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAsm_Labels()
  {
    return (EReference)asmEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLabelOrConstant()
  {
    return labelOrConstantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLabelOrConstant_Name()
  {
    return (EAttribute)labelOrConstantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLabelOrConstant_Statements()
  {
    return (EReference)labelOrConstantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocalLabel()
  {
    return localLabelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocalLabel_Name()
  {
    return (EAttribute)localLabelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInstruction()
  {
    return instructionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLd()
  {
    return ldEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLd_LocLabel()
  {
    return (EReference)ldEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLabelReference()
  {
    return labelReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLabelReference_RefLabel()
  {
    return (EReference)labelReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBankReference()
  {
    return bankReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBankReference_BankLabel()
  {
    return (EReference)bankReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAndCp()
  {
    return andCpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAndCp_AndCpLabelRef()
  {
    return (EReference)andCpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCallOrJump()
  {
    return callOrJumpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCallOrJump_AbsLabel()
  {
    return (EReference)callOrJumpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCallOrJump_LocLabel()
  {
    return (EReference)callOrJumpEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GbasmFactory getGbasmFactory()
  {
    return (GbasmFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    asmEClass = createEClass(ASM);
    createEReference(asmEClass, ASM__LABELS);

    labelOrConstantEClass = createEClass(LABEL_OR_CONSTANT);
    createEAttribute(labelOrConstantEClass, LABEL_OR_CONSTANT__NAME);
    createEReference(labelOrConstantEClass, LABEL_OR_CONSTANT__STATEMENTS);

    statementEClass = createEClass(STATEMENT);

    localLabelEClass = createEClass(LOCAL_LABEL);
    createEAttribute(localLabelEClass, LOCAL_LABEL__NAME);

    instructionEClass = createEClass(INSTRUCTION);

    ldEClass = createEClass(LD);
    createEReference(ldEClass, LD__LOC_LABEL);

    labelReferenceEClass = createEClass(LABEL_REFERENCE);
    createEReference(labelReferenceEClass, LABEL_REFERENCE__REF_LABEL);

    bankReferenceEClass = createEClass(BANK_REFERENCE);
    createEReference(bankReferenceEClass, BANK_REFERENCE__BANK_LABEL);

    andCpEClass = createEClass(AND_CP);
    createEReference(andCpEClass, AND_CP__AND_CP_LABEL_REF);

    callOrJumpEClass = createEClass(CALL_OR_JUMP);
    createEReference(callOrJumpEClass, CALL_OR_JUMP__ABS_LABEL);
    createEReference(callOrJumpEClass, CALL_OR_JUMP__LOC_LABEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    localLabelEClass.getESuperTypes().add(this.getStatement());
    instructionEClass.getESuperTypes().add(this.getStatement());
    ldEClass.getESuperTypes().add(this.getInstruction());
    labelReferenceEClass.getESuperTypes().add(this.getLd());
    bankReferenceEClass.getESuperTypes().add(this.getLd());
    andCpEClass.getESuperTypes().add(this.getInstruction());
    callOrJumpEClass.getESuperTypes().add(this.getInstruction());

    // Initialize classes and features; add operations and parameters
    initEClass(asmEClass, Asm.class, "Asm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAsm_Labels(), this.getLabelOrConstant(), null, "labels", null, 0, -1, Asm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(labelOrConstantEClass, LabelOrConstant.class, "LabelOrConstant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLabelOrConstant_Name(), ecorePackage.getEString(), "name", null, 0, 1, LabelOrConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLabelOrConstant_Statements(), this.getStatement(), null, "statements", null, 0, -1, LabelOrConstant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(localLabelEClass, LocalLabel.class, "LocalLabel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocalLabel_Name(), ecorePackage.getEString(), "name", null, 0, 1, LocalLabel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(instructionEClass, Instruction.class, "Instruction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ldEClass, Ld.class, "Ld", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLd_LocLabel(), this.getLocalLabel(), null, "locLabel", null, 0, 1, Ld.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(labelReferenceEClass, LabelReference.class, "LabelReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLabelReference_RefLabel(), this.getLabelOrConstant(), null, "refLabel", null, 0, 1, LabelReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bankReferenceEClass, BankReference.class, "BankReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBankReference_BankLabel(), this.getLabelOrConstant(), null, "bankLabel", null, 0, 1, BankReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(andCpEClass, AndCp.class, "AndCp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAndCp_AndCpLabelRef(), this.getLabelOrConstant(), null, "andCpLabelRef", null, 0, 1, AndCp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(callOrJumpEClass, CallOrJump.class, "CallOrJump", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCallOrJump_AbsLabel(), this.getLabelOrConstant(), null, "absLabel", null, 0, 1, CallOrJump.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCallOrJump_LocLabel(), this.getLocalLabel(), null, "locLabel", null, 0, 1, CallOrJump.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //GbasmPackageImpl
