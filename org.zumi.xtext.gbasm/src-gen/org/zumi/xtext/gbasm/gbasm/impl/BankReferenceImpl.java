/**
 * generated by Xtext 2.26.0
 */
package org.zumi.xtext.gbasm.gbasm.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.zumi.xtext.gbasm.gbasm.BankReference;
import org.zumi.xtext.gbasm.gbasm.GbasmPackage;
import org.zumi.xtext.gbasm.gbasm.LabelOrConstant;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bank Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.zumi.xtext.gbasm.gbasm.impl.BankReferenceImpl#getBankLabel <em>Bank Label</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BankReferenceImpl extends LdImpl implements BankReference
{
  /**
   * The cached value of the '{@link #getBankLabel() <em>Bank Label</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBankLabel()
   * @generated
   * @ordered
   */
  protected LabelOrConstant bankLabel;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BankReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GbasmPackage.Literals.BANK_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LabelOrConstant getBankLabel()
  {
    if (bankLabel != null && bankLabel.eIsProxy())
    {
      InternalEObject oldBankLabel = (InternalEObject)bankLabel;
      bankLabel = (LabelOrConstant)eResolveProxy(oldBankLabel);
      if (bankLabel != oldBankLabel)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GbasmPackage.BANK_REFERENCE__BANK_LABEL, oldBankLabel, bankLabel));
      }
    }
    return bankLabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LabelOrConstant basicGetBankLabel()
  {
    return bankLabel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBankLabel(LabelOrConstant newBankLabel)
  {
    LabelOrConstant oldBankLabel = bankLabel;
    bankLabel = newBankLabel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GbasmPackage.BANK_REFERENCE__BANK_LABEL, oldBankLabel, bankLabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GbasmPackage.BANK_REFERENCE__BANK_LABEL:
        if (resolve) return getBankLabel();
        return basicGetBankLabel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GbasmPackage.BANK_REFERENCE__BANK_LABEL:
        setBankLabel((LabelOrConstant)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GbasmPackage.BANK_REFERENCE__BANK_LABEL:
        setBankLabel((LabelOrConstant)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GbasmPackage.BANK_REFERENCE__BANK_LABEL:
        return bankLabel != null;
    }
    return super.eIsSet(featureID);
  }

} //BankReferenceImpl
